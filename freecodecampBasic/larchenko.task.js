let findEventSentence = (sentence = '')=>{
   return sentence
    .replace(/(\.|,|-|_|:|;)/ig,'')
    .trim()
    .split(' ')
    .filter(e=>e.length % 2 === 0)
    .sort(
        (a,b)=>a.length > b.length ? -1 : 1
    )?.[0] || '00';
}

/*sentence.replace(/(\.|,|-|_|:|;)/ig,''): Здесь выполняется замена всех вхождений точек (.), запятых (,), тире (-),
 подчеркиваний (_), двоеточий (:) и точек с запятой (;) на пустую строку.
 Это выполняется с использованием регулярного выражения и флага ig для игнорирования регистра (case-insensitive). 
 Однако, результат этой операции не сохраняется в переменной.

.trim(): Затем происходит удаление пробельных символов в начале и конце строки.

.split(' '): Строка разбивается на массив подстрок, используя пробел как разделитель.

.filter(e => e.length % 2 === 0): Выполняется фильтрация массива слов, оставляя только те слова, 
у которых длина является четным числом.

.sort((a, b) => a.length > b.length ? -1 : 1): Сортировка отфильтрованных слов в порядке убывания их длины. 
Если длина первого слова (a) больше длины второго слова (b), то слова меняются местами (по убыванию).

?.[0] || '00': Возвращает первое слово из отсортированного массива, если таковое есть. Если массив пуст (например,
    если исходная строка не содержит четных слов), то возвращается строка '00'.

Таким образом, функция извлекает из строки четные слова, сортирует их по убыванию длины и возвращает самое длинное из них. 
Если в строке нет четных слов, то возвращается строка '00'.*/